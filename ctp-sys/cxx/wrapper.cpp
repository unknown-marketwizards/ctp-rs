
#include "wrapper.hpp"

    
void Rust_CThostFtdcMdApi::Release() { return m_member->Release(); }
void Rust_CThostFtdcMdApi::Init() { return m_member->Init(); }
int Rust_CThostFtdcMdApi::Join() { return m_member->Join(); }
const char* Rust_CThostFtdcMdApi::GetTradingDay() { return m_member->GetTradingDay(); }
void Rust_CThostFtdcMdApi::RegisterFront(char* pszFrontAddress) { return m_member->RegisterFront(pszFrontAddress); }
void Rust_CThostFtdcMdApi::RegisterNameServer(char* pszNsAddress) { return m_member->RegisterNameServer(pszNsAddress); }
void Rust_CThostFtdcMdApi::RegisterFensUserInfo(CThostFtdcFensUserInfoField * pFensUserInfo) { return m_member->RegisterFensUserInfo(pFensUserInfo); }
void Rust_CThostFtdcMdApi::RegisterSpi(CThostFtdcMdSpi* pSpi) { return m_member->RegisterSpi(pSpi); }
int Rust_CThostFtdcMdApi::SubscribeMarketData(char* ppInstrumentID[], int nCount) { return m_member->SubscribeMarketData(ppInstrumentID, nCount); }
int Rust_CThostFtdcMdApi::UnSubscribeMarketData(char* ppInstrumentID[], int nCount) { return m_member->UnSubscribeMarketData(ppInstrumentID, nCount); }
int Rust_CThostFtdcMdApi::SubscribeForQuoteRsp(char* ppInstrumentID[], int nCount) { return m_member->SubscribeForQuoteRsp(ppInstrumentID, nCount); }
int Rust_CThostFtdcMdApi::UnSubscribeForQuoteRsp(char* ppInstrumentID[], int nCount) { return m_member->UnSubscribeForQuoteRsp(ppInstrumentID, nCount); }
int Rust_CThostFtdcMdApi::ReqUserLogin(CThostFtdcReqUserLoginField* pReqUserLoginField, int nRequestID) { return m_member->ReqUserLogin(pReqUserLoginField, nRequestID); }
int Rust_CThostFtdcMdApi::ReqUserLogout(CThostFtdcUserLogoutField* pUserLogout, int nRequestID) { return m_member->ReqUserLogout(pUserLogout, nRequestID); }
int Rust_CThostFtdcMdApi::ReqQryMulticastInstrument(CThostFtdcQryMulticastInstrumentField* pQryMulticastInstrument, int nRequestID) { return m_member->ReqQryMulticastInstrument(pQryMulticastInstrument, nRequestID); }
Rust_CThostFtdcMdApi::Rust_CThostFtdcMdApi(CThostFtdcMdApi *member) : m_member(member) {  };
Rust_CThostFtdcMdApi::~Rust_CThostFtdcMdApi() {  };


void Rust_CThostFtdcMdSpi::OnFrontConnected() { return Rust_CThostFtdcMdSpi_Trait_OnFrontConnected(m_rust); }
void Rust_CThostFtdcMdSpi::OnFrontDisconnected(int nReason) { return Rust_CThostFtdcMdSpi_Trait_OnFrontDisconnected(m_rust, nReason); }
void Rust_CThostFtdcMdSpi::OnHeartBeatWarning(int nTimeLapse) { return Rust_CThostFtdcMdSpi_Trait_OnHeartBeatWarning(m_rust, nTimeLapse); }
void Rust_CThostFtdcMdSpi::OnRspUserLogin(CThostFtdcRspUserLoginField* pRspUserLogin, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcMdSpi_Trait_OnRspUserLogin(m_rust, pRspUserLogin, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcMdSpi::OnRspUserLogout(CThostFtdcUserLogoutField* pUserLogout, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcMdSpi_Trait_OnRspUserLogout(m_rust, pUserLogout, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcMdSpi::OnRspQryMulticastInstrument(CThostFtdcMulticastInstrumentField* pMulticastInstrument, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcMdSpi_Trait_OnRspQryMulticastInstrument(m_rust, pMulticastInstrument, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcMdSpi::OnRspError(CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcMdSpi_Trait_OnRspError(m_rust, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcMdSpi::OnRspSubMarketData(CThostFtdcSpecificInstrumentField* pSpecificInstrument, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcMdSpi_Trait_OnRspSubMarketData(m_rust, pSpecificInstrument, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcMdSpi::OnRspUnSubMarketData(CThostFtdcSpecificInstrumentField* pSpecificInstrument, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcMdSpi_Trait_OnRspUnSubMarketData(m_rust, pSpecificInstrument, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcMdSpi::OnRspSubForQuoteRsp(CThostFtdcSpecificInstrumentField* pSpecificInstrument, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcMdSpi_Trait_OnRspSubForQuoteRsp(m_rust, pSpecificInstrument, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcMdSpi::OnRspUnSubForQuoteRsp(CThostFtdcSpecificInstrumentField* pSpecificInstrument, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcMdSpi_Trait_OnRspUnSubForQuoteRsp(m_rust, pSpecificInstrument, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcMdSpi::OnRtnDepthMarketData(CThostFtdcDepthMarketDataField* pDepthMarketData) { return Rust_CThostFtdcMdSpi_Trait_OnRtnDepthMarketData(m_rust, pDepthMarketData); }
void Rust_CThostFtdcMdSpi::OnRtnForQuoteRsp(CThostFtdcForQuoteRspField* pForQuoteRsp) { return Rust_CThostFtdcMdSpi_Trait_OnRtnForQuoteRsp(m_rust, pForQuoteRsp); }
Rust_CThostFtdcMdSpi::Rust_CThostFtdcMdSpi(void *rust) : m_rust(rust) {}
Rust_CThostFtdcMdSpi::~Rust_CThostFtdcMdSpi() { Rust_CThostFtdcMdSpi_Trait_Drop(m_rust); }


void Rust_CThostFtdcTraderApi::Release() { return m_member->Release(); }
void Rust_CThostFtdcTraderApi::Init() { return m_member->Init(); }
int Rust_CThostFtdcTraderApi::Join() { return m_member->Join(); }
const char* Rust_CThostFtdcTraderApi::GetTradingDay() { return m_member->GetTradingDay(); }
void Rust_CThostFtdcTraderApi::RegisterFront(char* pszFrontAddress) { return m_member->RegisterFront(pszFrontAddress); }
void Rust_CThostFtdcTraderApi::RegisterNameServer(char* pszNsAddress) { return m_member->RegisterNameServer(pszNsAddress); }
void Rust_CThostFtdcTraderApi::RegisterFensUserInfo(CThostFtdcFensUserInfoField * pFensUserInfo) { return m_member->RegisterFensUserInfo(pFensUserInfo); }
void Rust_CThostFtdcTraderApi::RegisterSpi(CThostFtdcTraderSpi* pSpi) { return m_member->RegisterSpi(pSpi); }
void Rust_CThostFtdcTraderApi::SubscribePrivateTopic(THOST_TE_RESUME_TYPE nResumeType) { return m_member->SubscribePrivateTopic(nResumeType); }
void Rust_CThostFtdcTraderApi::SubscribePublicTopic(THOST_TE_RESUME_TYPE nResumeType) { return m_member->SubscribePublicTopic(nResumeType); }
int Rust_CThostFtdcTraderApi::ReqAuthenticate(CThostFtdcReqAuthenticateField* pReqAuthenticateField, int nRequestID) { return m_member->ReqAuthenticate(pReqAuthenticateField, nRequestID); }
int Rust_CThostFtdcTraderApi::RegisterUserSystemInfo(CThostFtdcUserSystemInfoField* pUserSystemInfo) { return m_member->RegisterUserSystemInfo(pUserSystemInfo); }
int Rust_CThostFtdcTraderApi::SubmitUserSystemInfo(CThostFtdcUserSystemInfoField* pUserSystemInfo) { return m_member->SubmitUserSystemInfo(pUserSystemInfo); }
int Rust_CThostFtdcTraderApi::ReqUserLogin(CThostFtdcReqUserLoginField* pReqUserLoginField, int nRequestID) { return m_member->ReqUserLogin(pReqUserLoginField, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqUserLogout(CThostFtdcUserLogoutField* pUserLogout, int nRequestID) { return m_member->ReqUserLogout(pUserLogout, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqUserPasswordUpdate(CThostFtdcUserPasswordUpdateField* pUserPasswordUpdate, int nRequestID) { return m_member->ReqUserPasswordUpdate(pUserPasswordUpdate, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqTradingAccountPasswordUpdate(CThostFtdcTradingAccountPasswordUpdateField* pTradingAccountPasswordUpdate, int nRequestID) { return m_member->ReqTradingAccountPasswordUpdate(pTradingAccountPasswordUpdate, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqUserAuthMethod(CThostFtdcReqUserAuthMethodField* pReqUserAuthMethod, int nRequestID) { return m_member->ReqUserAuthMethod(pReqUserAuthMethod, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqGenUserCaptcha(CThostFtdcReqGenUserCaptchaField* pReqGenUserCaptcha, int nRequestID) { return m_member->ReqGenUserCaptcha(pReqGenUserCaptcha, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqGenUserText(CThostFtdcReqGenUserTextField* pReqGenUserText, int nRequestID) { return m_member->ReqGenUserText(pReqGenUserText, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqUserLoginWithCaptcha(CThostFtdcReqUserLoginWithCaptchaField* pReqUserLoginWithCaptcha, int nRequestID) { return m_member->ReqUserLoginWithCaptcha(pReqUserLoginWithCaptcha, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqUserLoginWithText(CThostFtdcReqUserLoginWithTextField* pReqUserLoginWithText, int nRequestID) { return m_member->ReqUserLoginWithText(pReqUserLoginWithText, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqUserLoginWithOTP(CThostFtdcReqUserLoginWithOTPField* pReqUserLoginWithOTP, int nRequestID) { return m_member->ReqUserLoginWithOTP(pReqUserLoginWithOTP, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqOrderInsert(CThostFtdcInputOrderField* pInputOrder, int nRequestID) { return m_member->ReqOrderInsert(pInputOrder, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqParkedOrderInsert(CThostFtdcParkedOrderField* pParkedOrder, int nRequestID) { return m_member->ReqParkedOrderInsert(pParkedOrder, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqParkedOrderAction(CThostFtdcParkedOrderActionField* pParkedOrderAction, int nRequestID) { return m_member->ReqParkedOrderAction(pParkedOrderAction, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqOrderAction(CThostFtdcInputOrderActionField* pInputOrderAction, int nRequestID) { return m_member->ReqOrderAction(pInputOrderAction, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQryMaxOrderVolume(CThostFtdcQryMaxOrderVolumeField* pQryMaxOrderVolume, int nRequestID) { return m_member->ReqQryMaxOrderVolume(pQryMaxOrderVolume, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqSettlementInfoConfirm(CThostFtdcSettlementInfoConfirmField* pSettlementInfoConfirm, int nRequestID) { return m_member->ReqSettlementInfoConfirm(pSettlementInfoConfirm, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqRemoveParkedOrder(CThostFtdcRemoveParkedOrderField* pRemoveParkedOrder, int nRequestID) { return m_member->ReqRemoveParkedOrder(pRemoveParkedOrder, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqRemoveParkedOrderAction(CThostFtdcRemoveParkedOrderActionField* pRemoveParkedOrderAction, int nRequestID) { return m_member->ReqRemoveParkedOrderAction(pRemoveParkedOrderAction, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqExecOrderInsert(CThostFtdcInputExecOrderField* pInputExecOrder, int nRequestID) { return m_member->ReqExecOrderInsert(pInputExecOrder, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqExecOrderAction(CThostFtdcInputExecOrderActionField* pInputExecOrderAction, int nRequestID) { return m_member->ReqExecOrderAction(pInputExecOrderAction, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqForQuoteInsert(CThostFtdcInputForQuoteField* pInputForQuote, int nRequestID) { return m_member->ReqForQuoteInsert(pInputForQuote, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQuoteInsert(CThostFtdcInputQuoteField* pInputQuote, int nRequestID) { return m_member->ReqQuoteInsert(pInputQuote, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQuoteAction(CThostFtdcInputQuoteActionField* pInputQuoteAction, int nRequestID) { return m_member->ReqQuoteAction(pInputQuoteAction, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqBatchOrderAction(CThostFtdcInputBatchOrderActionField* pInputBatchOrderAction, int nRequestID) { return m_member->ReqBatchOrderAction(pInputBatchOrderAction, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqOptionSelfCloseInsert(CThostFtdcInputOptionSelfCloseField* pInputOptionSelfClose, int nRequestID) { return m_member->ReqOptionSelfCloseInsert(pInputOptionSelfClose, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqOptionSelfCloseAction(CThostFtdcInputOptionSelfCloseActionField* pInputOptionSelfCloseAction, int nRequestID) { return m_member->ReqOptionSelfCloseAction(pInputOptionSelfCloseAction, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqCombActionInsert(CThostFtdcInputCombActionField* pInputCombAction, int nRequestID) { return m_member->ReqCombActionInsert(pInputCombAction, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQryOrder(CThostFtdcQryOrderField* pQryOrder, int nRequestID) { return m_member->ReqQryOrder(pQryOrder, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQryTrade(CThostFtdcQryTradeField* pQryTrade, int nRequestID) { return m_member->ReqQryTrade(pQryTrade, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQryInvestorPosition(CThostFtdcQryInvestorPositionField* pQryInvestorPosition, int nRequestID) { return m_member->ReqQryInvestorPosition(pQryInvestorPosition, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQryTradingAccount(CThostFtdcQryTradingAccountField* pQryTradingAccount, int nRequestID) { return m_member->ReqQryTradingAccount(pQryTradingAccount, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQryInvestor(CThostFtdcQryInvestorField* pQryInvestor, int nRequestID) { return m_member->ReqQryInvestor(pQryInvestor, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQryTradingCode(CThostFtdcQryTradingCodeField* pQryTradingCode, int nRequestID) { return m_member->ReqQryTradingCode(pQryTradingCode, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQryInstrumentMarginRate(CThostFtdcQryInstrumentMarginRateField* pQryInstrumentMarginRate, int nRequestID) { return m_member->ReqQryInstrumentMarginRate(pQryInstrumentMarginRate, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQryInstrumentCommissionRate(CThostFtdcQryInstrumentCommissionRateField* pQryInstrumentCommissionRate, int nRequestID) { return m_member->ReqQryInstrumentCommissionRate(pQryInstrumentCommissionRate, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQryExchange(CThostFtdcQryExchangeField* pQryExchange, int nRequestID) { return m_member->ReqQryExchange(pQryExchange, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQryProduct(CThostFtdcQryProductField* pQryProduct, int nRequestID) { return m_member->ReqQryProduct(pQryProduct, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQryInstrument(CThostFtdcQryInstrumentField* pQryInstrument, int nRequestID) { return m_member->ReqQryInstrument(pQryInstrument, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQryDepthMarketData(CThostFtdcQryDepthMarketDataField* pQryDepthMarketData, int nRequestID) { return m_member->ReqQryDepthMarketData(pQryDepthMarketData, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQryTraderOffer(CThostFtdcQryTraderOfferField* pQryTraderOffer, int nRequestID) { return m_member->ReqQryTraderOffer(pQryTraderOffer, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQrySettlementInfo(CThostFtdcQrySettlementInfoField* pQrySettlementInfo, int nRequestID) { return m_member->ReqQrySettlementInfo(pQrySettlementInfo, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQryTransferBank(CThostFtdcQryTransferBankField* pQryTransferBank, int nRequestID) { return m_member->ReqQryTransferBank(pQryTransferBank, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQryInvestorPositionDetail(CThostFtdcQryInvestorPositionDetailField* pQryInvestorPositionDetail, int nRequestID) { return m_member->ReqQryInvestorPositionDetail(pQryInvestorPositionDetail, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQryNotice(CThostFtdcQryNoticeField* pQryNotice, int nRequestID) { return m_member->ReqQryNotice(pQryNotice, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQrySettlementInfoConfirm(CThostFtdcQrySettlementInfoConfirmField* pQrySettlementInfoConfirm, int nRequestID) { return m_member->ReqQrySettlementInfoConfirm(pQrySettlementInfoConfirm, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQryInvestorPositionCombineDetail(CThostFtdcQryInvestorPositionCombineDetailField* pQryInvestorPositionCombineDetail, int nRequestID) { return m_member->ReqQryInvestorPositionCombineDetail(pQryInvestorPositionCombineDetail, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQryCFMMCTradingAccountKey(CThostFtdcQryCFMMCTradingAccountKeyField* pQryCFMMCTradingAccountKey, int nRequestID) { return m_member->ReqQryCFMMCTradingAccountKey(pQryCFMMCTradingAccountKey, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQryEWarrantOffset(CThostFtdcQryEWarrantOffsetField* pQryEWarrantOffset, int nRequestID) { return m_member->ReqQryEWarrantOffset(pQryEWarrantOffset, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQryInvestorProductGroupMargin(CThostFtdcQryInvestorProductGroupMarginField* pQryInvestorProductGroupMargin, int nRequestID) { return m_member->ReqQryInvestorProductGroupMargin(pQryInvestorProductGroupMargin, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQryExchangeMarginRate(CThostFtdcQryExchangeMarginRateField* pQryExchangeMarginRate, int nRequestID) { return m_member->ReqQryExchangeMarginRate(pQryExchangeMarginRate, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQryExchangeMarginRateAdjust(CThostFtdcQryExchangeMarginRateAdjustField* pQryExchangeMarginRateAdjust, int nRequestID) { return m_member->ReqQryExchangeMarginRateAdjust(pQryExchangeMarginRateAdjust, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQryExchangeRate(CThostFtdcQryExchangeRateField* pQryExchangeRate, int nRequestID) { return m_member->ReqQryExchangeRate(pQryExchangeRate, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQrySecAgentACIDMap(CThostFtdcQrySecAgentACIDMapField* pQrySecAgentACIDMap, int nRequestID) { return m_member->ReqQrySecAgentACIDMap(pQrySecAgentACIDMap, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQryProductExchRate(CThostFtdcQryProductExchRateField* pQryProductExchRate, int nRequestID) { return m_member->ReqQryProductExchRate(pQryProductExchRate, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQryProductGroup(CThostFtdcQryProductGroupField* pQryProductGroup, int nRequestID) { return m_member->ReqQryProductGroup(pQryProductGroup, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQryMMInstrumentCommissionRate(CThostFtdcQryMMInstrumentCommissionRateField* pQryMMInstrumentCommissionRate, int nRequestID) { return m_member->ReqQryMMInstrumentCommissionRate(pQryMMInstrumentCommissionRate, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQryMMOptionInstrCommRate(CThostFtdcQryMMOptionInstrCommRateField* pQryMMOptionInstrCommRate, int nRequestID) { return m_member->ReqQryMMOptionInstrCommRate(pQryMMOptionInstrCommRate, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQryInstrumentOrderCommRate(CThostFtdcQryInstrumentOrderCommRateField* pQryInstrumentOrderCommRate, int nRequestID) { return m_member->ReqQryInstrumentOrderCommRate(pQryInstrumentOrderCommRate, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQrySecAgentTradingAccount(CThostFtdcQryTradingAccountField* pQryTradingAccount, int nRequestID) { return m_member->ReqQrySecAgentTradingAccount(pQryTradingAccount, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQrySecAgentCheckMode(CThostFtdcQrySecAgentCheckModeField* pQrySecAgentCheckMode, int nRequestID) { return m_member->ReqQrySecAgentCheckMode(pQrySecAgentCheckMode, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQrySecAgentTradeInfo(CThostFtdcQrySecAgentTradeInfoField* pQrySecAgentTradeInfo, int nRequestID) { return m_member->ReqQrySecAgentTradeInfo(pQrySecAgentTradeInfo, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQryOptionInstrTradeCost(CThostFtdcQryOptionInstrTradeCostField* pQryOptionInstrTradeCost, int nRequestID) { return m_member->ReqQryOptionInstrTradeCost(pQryOptionInstrTradeCost, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQryOptionInstrCommRate(CThostFtdcQryOptionInstrCommRateField* pQryOptionInstrCommRate, int nRequestID) { return m_member->ReqQryOptionInstrCommRate(pQryOptionInstrCommRate, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQryExecOrder(CThostFtdcQryExecOrderField* pQryExecOrder, int nRequestID) { return m_member->ReqQryExecOrder(pQryExecOrder, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQryForQuote(CThostFtdcQryForQuoteField* pQryForQuote, int nRequestID) { return m_member->ReqQryForQuote(pQryForQuote, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQryQuote(CThostFtdcQryQuoteField* pQryQuote, int nRequestID) { return m_member->ReqQryQuote(pQryQuote, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQryOptionSelfClose(CThostFtdcQryOptionSelfCloseField* pQryOptionSelfClose, int nRequestID) { return m_member->ReqQryOptionSelfClose(pQryOptionSelfClose, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQryInvestUnit(CThostFtdcQryInvestUnitField* pQryInvestUnit, int nRequestID) { return m_member->ReqQryInvestUnit(pQryInvestUnit, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQryCombInstrumentGuard(CThostFtdcQryCombInstrumentGuardField* pQryCombInstrumentGuard, int nRequestID) { return m_member->ReqQryCombInstrumentGuard(pQryCombInstrumentGuard, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQryCombAction(CThostFtdcQryCombActionField* pQryCombAction, int nRequestID) { return m_member->ReqQryCombAction(pQryCombAction, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQryTransferSerial(CThostFtdcQryTransferSerialField* pQryTransferSerial, int nRequestID) { return m_member->ReqQryTransferSerial(pQryTransferSerial, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQryAccountregister(CThostFtdcQryAccountregisterField* pQryAccountregister, int nRequestID) { return m_member->ReqQryAccountregister(pQryAccountregister, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQryContractBank(CThostFtdcQryContractBankField* pQryContractBank, int nRequestID) { return m_member->ReqQryContractBank(pQryContractBank, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQryParkedOrder(CThostFtdcQryParkedOrderField* pQryParkedOrder, int nRequestID) { return m_member->ReqQryParkedOrder(pQryParkedOrder, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQryParkedOrderAction(CThostFtdcQryParkedOrderActionField* pQryParkedOrderAction, int nRequestID) { return m_member->ReqQryParkedOrderAction(pQryParkedOrderAction, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQryTradingNotice(CThostFtdcQryTradingNoticeField* pQryTradingNotice, int nRequestID) { return m_member->ReqQryTradingNotice(pQryTradingNotice, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQryBrokerTradingParams(CThostFtdcQryBrokerTradingParamsField* pQryBrokerTradingParams, int nRequestID) { return m_member->ReqQryBrokerTradingParams(pQryBrokerTradingParams, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQryBrokerTradingAlgos(CThostFtdcQryBrokerTradingAlgosField* pQryBrokerTradingAlgos, int nRequestID) { return m_member->ReqQryBrokerTradingAlgos(pQryBrokerTradingAlgos, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQueryCFMMCTradingAccountToken(CThostFtdcQueryCFMMCTradingAccountTokenField* pQueryCFMMCTradingAccountToken, int nRequestID) { return m_member->ReqQueryCFMMCTradingAccountToken(pQueryCFMMCTradingAccountToken, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqFromBankToFutureByFuture(CThostFtdcReqTransferField* pReqTransfer, int nRequestID) { return m_member->ReqFromBankToFutureByFuture(pReqTransfer, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqFromFutureToBankByFuture(CThostFtdcReqTransferField* pReqTransfer, int nRequestID) { return m_member->ReqFromFutureToBankByFuture(pReqTransfer, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQueryBankAccountMoneyByFuture(CThostFtdcReqQueryAccountField* pReqQueryAccount, int nRequestID) { return m_member->ReqQueryBankAccountMoneyByFuture(pReqQueryAccount, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQryClassifiedInstrument(CThostFtdcQryClassifiedInstrumentField* pQryClassifiedInstrument, int nRequestID) { return m_member->ReqQryClassifiedInstrument(pQryClassifiedInstrument, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQryCombPromotionParam(CThostFtdcQryCombPromotionParamField* pQryCombPromotionParam, int nRequestID) { return m_member->ReqQryCombPromotionParam(pQryCombPromotionParam, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQryRiskSettleInvstPosition(CThostFtdcQryRiskSettleInvstPositionField* pQryRiskSettleInvstPosition, int nRequestID) { return m_member->ReqQryRiskSettleInvstPosition(pQryRiskSettleInvstPosition, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQryRiskSettleProductStatus(CThostFtdcQryRiskSettleProductStatusField* pQryRiskSettleProductStatus, int nRequestID) { return m_member->ReqQryRiskSettleProductStatus(pQryRiskSettleProductStatus, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQrySPBMFutureParameter(CThostFtdcQrySPBMFutureParameterField* pQrySPBMFutureParameter, int nRequestID) { return m_member->ReqQrySPBMFutureParameter(pQrySPBMFutureParameter, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQrySPBMOptionParameter(CThostFtdcQrySPBMOptionParameterField* pQrySPBMOptionParameter, int nRequestID) { return m_member->ReqQrySPBMOptionParameter(pQrySPBMOptionParameter, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQrySPBMIntraParameter(CThostFtdcQrySPBMIntraParameterField* pQrySPBMIntraParameter, int nRequestID) { return m_member->ReqQrySPBMIntraParameter(pQrySPBMIntraParameter, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQrySPBMInterParameter(CThostFtdcQrySPBMInterParameterField* pQrySPBMInterParameter, int nRequestID) { return m_member->ReqQrySPBMInterParameter(pQrySPBMInterParameter, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQrySPBMPortfDefinition(CThostFtdcQrySPBMPortfDefinitionField* pQrySPBMPortfDefinition, int nRequestID) { return m_member->ReqQrySPBMPortfDefinition(pQrySPBMPortfDefinition, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQrySPBMInvestorPortfDef(CThostFtdcQrySPBMInvestorPortfDefField* pQrySPBMInvestorPortfDef, int nRequestID) { return m_member->ReqQrySPBMInvestorPortfDef(pQrySPBMInvestorPortfDef, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQryInvestorPortfMarginRatio(CThostFtdcQryInvestorPortfMarginRatioField* pQryInvestorPortfMarginRatio, int nRequestID) { return m_member->ReqQryInvestorPortfMarginRatio(pQryInvestorPortfMarginRatio, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQryInvestorProdSPBMDetail(CThostFtdcQryInvestorProdSPBMDetailField* pQryInvestorProdSPBMDetail, int nRequestID) { return m_member->ReqQryInvestorProdSPBMDetail(pQryInvestorProdSPBMDetail, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQryInvestorCommoditySPMMMargin(CThostFtdcQryInvestorCommoditySPMMMarginField* pQryInvestorCommoditySPMMMargin, int nRequestID) { return m_member->ReqQryInvestorCommoditySPMMMargin(pQryInvestorCommoditySPMMMargin, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQryInvestorCommodityGroupSPMMMargin(CThostFtdcQryInvestorCommodityGroupSPMMMarginField* pQryInvestorCommodityGroupSPMMMargin, int nRequestID) { return m_member->ReqQryInvestorCommodityGroupSPMMMargin(pQryInvestorCommodityGroupSPMMMargin, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQrySPMMInstParam(CThostFtdcQrySPMMInstParamField* pQrySPMMInstParam, int nRequestID) { return m_member->ReqQrySPMMInstParam(pQrySPMMInstParam, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQrySPMMProductParam(CThostFtdcQrySPMMProductParamField* pQrySPMMProductParam, int nRequestID) { return m_member->ReqQrySPMMProductParam(pQrySPMMProductParam, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQrySPBMAddOnInterParameter(CThostFtdcQrySPBMAddOnInterParameterField* pQrySPBMAddOnInterParameter, int nRequestID) { return m_member->ReqQrySPBMAddOnInterParameter(pQrySPBMAddOnInterParameter, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQryRCAMSCombProductInfo(CThostFtdcQryRCAMSCombProductInfoField* pQryRCAMSCombProductInfo, int nRequestID) { return m_member->ReqQryRCAMSCombProductInfo(pQryRCAMSCombProductInfo, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQryRCAMSInstrParameter(CThostFtdcQryRCAMSInstrParameterField* pQryRCAMSInstrParameter, int nRequestID) { return m_member->ReqQryRCAMSInstrParameter(pQryRCAMSInstrParameter, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQryRCAMSIntraParameter(CThostFtdcQryRCAMSIntraParameterField* pQryRCAMSIntraParameter, int nRequestID) { return m_member->ReqQryRCAMSIntraParameter(pQryRCAMSIntraParameter, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQryRCAMSInterParameter(CThostFtdcQryRCAMSInterParameterField* pQryRCAMSInterParameter, int nRequestID) { return m_member->ReqQryRCAMSInterParameter(pQryRCAMSInterParameter, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQryRCAMSShortOptAdjustParam(CThostFtdcQryRCAMSShortOptAdjustParamField* pQryRCAMSShortOptAdjustParam, int nRequestID) { return m_member->ReqQryRCAMSShortOptAdjustParam(pQryRCAMSShortOptAdjustParam, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQryRCAMSInvestorCombPosition(CThostFtdcQryRCAMSInvestorCombPositionField* pQryRCAMSInvestorCombPosition, int nRequestID) { return m_member->ReqQryRCAMSInvestorCombPosition(pQryRCAMSInvestorCombPosition, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQryInvestorProdRCAMSMargin(CThostFtdcQryInvestorProdRCAMSMarginField* pQryInvestorProdRCAMSMargin, int nRequestID) { return m_member->ReqQryInvestorProdRCAMSMargin(pQryInvestorProdRCAMSMargin, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQryRULEInstrParameter(CThostFtdcQryRULEInstrParameterField* pQryRULEInstrParameter, int nRequestID) { return m_member->ReqQryRULEInstrParameter(pQryRULEInstrParameter, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQryRULEIntraParameter(CThostFtdcQryRULEIntraParameterField* pQryRULEIntraParameter, int nRequestID) { return m_member->ReqQryRULEIntraParameter(pQryRULEIntraParameter, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQryRULEInterParameter(CThostFtdcQryRULEInterParameterField* pQryRULEInterParameter, int nRequestID) { return m_member->ReqQryRULEInterParameter(pQryRULEInterParameter, nRequestID); }
int Rust_CThostFtdcTraderApi::ReqQryInvestorProdRULEMargin(CThostFtdcQryInvestorProdRULEMarginField* pQryInvestorProdRULEMargin, int nRequestID) { return m_member->ReqQryInvestorProdRULEMargin(pQryInvestorProdRULEMargin, nRequestID); }
Rust_CThostFtdcTraderApi::Rust_CThostFtdcTraderApi(CThostFtdcTraderApi *member) : m_member(member) {  };
Rust_CThostFtdcTraderApi::~Rust_CThostFtdcTraderApi() {  };


void Rust_CThostFtdcTraderSpi::OnFrontConnected() { return Rust_CThostFtdcTraderSpi_Trait_OnFrontConnected(m_rust); }
void Rust_CThostFtdcTraderSpi::OnFrontDisconnected(int nReason) { return Rust_CThostFtdcTraderSpi_Trait_OnFrontDisconnected(m_rust, nReason); }
void Rust_CThostFtdcTraderSpi::OnHeartBeatWarning(int nTimeLapse) { return Rust_CThostFtdcTraderSpi_Trait_OnHeartBeatWarning(m_rust, nTimeLapse); }
void Rust_CThostFtdcTraderSpi::OnRspAuthenticate(CThostFtdcRspAuthenticateField* pRspAuthenticateField, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspAuthenticate(m_rust, pRspAuthenticateField, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspUserLogin(CThostFtdcRspUserLoginField* pRspUserLogin, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspUserLogin(m_rust, pRspUserLogin, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspUserLogout(CThostFtdcUserLogoutField* pUserLogout, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspUserLogout(m_rust, pUserLogout, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspUserPasswordUpdate(CThostFtdcUserPasswordUpdateField* pUserPasswordUpdate, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspUserPasswordUpdate(m_rust, pUserPasswordUpdate, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspTradingAccountPasswordUpdate(CThostFtdcTradingAccountPasswordUpdateField* pTradingAccountPasswordUpdate, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspTradingAccountPasswordUpdate(m_rust, pTradingAccountPasswordUpdate, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspUserAuthMethod(CThostFtdcRspUserAuthMethodField* pRspUserAuthMethod, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspUserAuthMethod(m_rust, pRspUserAuthMethod, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspGenUserCaptcha(CThostFtdcRspGenUserCaptchaField* pRspGenUserCaptcha, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspGenUserCaptcha(m_rust, pRspGenUserCaptcha, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspGenUserText(CThostFtdcRspGenUserTextField* pRspGenUserText, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspGenUserText(m_rust, pRspGenUserText, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspOrderInsert(CThostFtdcInputOrderField* pInputOrder, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspOrderInsert(m_rust, pInputOrder, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspParkedOrderInsert(CThostFtdcParkedOrderField* pParkedOrder, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspParkedOrderInsert(m_rust, pParkedOrder, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspParkedOrderAction(CThostFtdcParkedOrderActionField* pParkedOrderAction, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspParkedOrderAction(m_rust, pParkedOrderAction, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspOrderAction(CThostFtdcInputOrderActionField* pInputOrderAction, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspOrderAction(m_rust, pInputOrderAction, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQryMaxOrderVolume(CThostFtdcQryMaxOrderVolumeField* pQryMaxOrderVolume, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQryMaxOrderVolume(m_rust, pQryMaxOrderVolume, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspSettlementInfoConfirm(CThostFtdcSettlementInfoConfirmField* pSettlementInfoConfirm, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspSettlementInfoConfirm(m_rust, pSettlementInfoConfirm, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspRemoveParkedOrder(CThostFtdcRemoveParkedOrderField* pRemoveParkedOrder, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspRemoveParkedOrder(m_rust, pRemoveParkedOrder, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspRemoveParkedOrderAction(CThostFtdcRemoveParkedOrderActionField* pRemoveParkedOrderAction, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspRemoveParkedOrderAction(m_rust, pRemoveParkedOrderAction, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspExecOrderInsert(CThostFtdcInputExecOrderField* pInputExecOrder, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspExecOrderInsert(m_rust, pInputExecOrder, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspExecOrderAction(CThostFtdcInputExecOrderActionField* pInputExecOrderAction, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspExecOrderAction(m_rust, pInputExecOrderAction, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspForQuoteInsert(CThostFtdcInputForQuoteField* pInputForQuote, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspForQuoteInsert(m_rust, pInputForQuote, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQuoteInsert(CThostFtdcInputQuoteField* pInputQuote, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQuoteInsert(m_rust, pInputQuote, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQuoteAction(CThostFtdcInputQuoteActionField* pInputQuoteAction, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQuoteAction(m_rust, pInputQuoteAction, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspBatchOrderAction(CThostFtdcInputBatchOrderActionField* pInputBatchOrderAction, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspBatchOrderAction(m_rust, pInputBatchOrderAction, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspOptionSelfCloseInsert(CThostFtdcInputOptionSelfCloseField* pInputOptionSelfClose, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspOptionSelfCloseInsert(m_rust, pInputOptionSelfClose, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspOptionSelfCloseAction(CThostFtdcInputOptionSelfCloseActionField* pInputOptionSelfCloseAction, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspOptionSelfCloseAction(m_rust, pInputOptionSelfCloseAction, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspCombActionInsert(CThostFtdcInputCombActionField* pInputCombAction, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspCombActionInsert(m_rust, pInputCombAction, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQryOrder(CThostFtdcOrderField* pOrder, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQryOrder(m_rust, pOrder, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQryTrade(CThostFtdcTradeField* pTrade, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQryTrade(m_rust, pTrade, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQryInvestorPosition(CThostFtdcInvestorPositionField* pInvestorPosition, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQryInvestorPosition(m_rust, pInvestorPosition, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQryTradingAccount(CThostFtdcTradingAccountField* pTradingAccount, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQryTradingAccount(m_rust, pTradingAccount, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQryInvestor(CThostFtdcInvestorField* pInvestor, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQryInvestor(m_rust, pInvestor, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQryTradingCode(CThostFtdcTradingCodeField* pTradingCode, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQryTradingCode(m_rust, pTradingCode, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQryInstrumentMarginRate(CThostFtdcInstrumentMarginRateField* pInstrumentMarginRate, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQryInstrumentMarginRate(m_rust, pInstrumentMarginRate, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQryInstrumentCommissionRate(CThostFtdcInstrumentCommissionRateField* pInstrumentCommissionRate, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQryInstrumentCommissionRate(m_rust, pInstrumentCommissionRate, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQryExchange(CThostFtdcExchangeField* pExchange, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQryExchange(m_rust, pExchange, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQryProduct(CThostFtdcProductField* pProduct, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQryProduct(m_rust, pProduct, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQryInstrument(CThostFtdcInstrumentField* pInstrument, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQryInstrument(m_rust, pInstrument, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQryDepthMarketData(CThostFtdcDepthMarketDataField* pDepthMarketData, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQryDepthMarketData(m_rust, pDepthMarketData, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQryTraderOffer(CThostFtdcTraderOfferField* pTraderOffer, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQryTraderOffer(m_rust, pTraderOffer, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQrySettlementInfo(CThostFtdcSettlementInfoField* pSettlementInfo, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQrySettlementInfo(m_rust, pSettlementInfo, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQryTransferBank(CThostFtdcTransferBankField* pTransferBank, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQryTransferBank(m_rust, pTransferBank, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQryInvestorPositionDetail(CThostFtdcInvestorPositionDetailField* pInvestorPositionDetail, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQryInvestorPositionDetail(m_rust, pInvestorPositionDetail, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQryNotice(CThostFtdcNoticeField* pNotice, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQryNotice(m_rust, pNotice, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQrySettlementInfoConfirm(CThostFtdcSettlementInfoConfirmField* pSettlementInfoConfirm, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQrySettlementInfoConfirm(m_rust, pSettlementInfoConfirm, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQryInvestorPositionCombineDetail(CThostFtdcInvestorPositionCombineDetailField* pInvestorPositionCombineDetail, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQryInvestorPositionCombineDetail(m_rust, pInvestorPositionCombineDetail, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQryCFMMCTradingAccountKey(CThostFtdcCFMMCTradingAccountKeyField* pCFMMCTradingAccountKey, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQryCFMMCTradingAccountKey(m_rust, pCFMMCTradingAccountKey, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQryEWarrantOffset(CThostFtdcEWarrantOffsetField* pEWarrantOffset, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQryEWarrantOffset(m_rust, pEWarrantOffset, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQryInvestorProductGroupMargin(CThostFtdcInvestorProductGroupMarginField* pInvestorProductGroupMargin, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQryInvestorProductGroupMargin(m_rust, pInvestorProductGroupMargin, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQryExchangeMarginRate(CThostFtdcExchangeMarginRateField* pExchangeMarginRate, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQryExchangeMarginRate(m_rust, pExchangeMarginRate, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQryExchangeMarginRateAdjust(CThostFtdcExchangeMarginRateAdjustField* pExchangeMarginRateAdjust, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQryExchangeMarginRateAdjust(m_rust, pExchangeMarginRateAdjust, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQryExchangeRate(CThostFtdcExchangeRateField* pExchangeRate, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQryExchangeRate(m_rust, pExchangeRate, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQrySecAgentACIDMap(CThostFtdcSecAgentACIDMapField* pSecAgentACIDMap, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQrySecAgentACIDMap(m_rust, pSecAgentACIDMap, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQryProductExchRate(CThostFtdcProductExchRateField* pProductExchRate, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQryProductExchRate(m_rust, pProductExchRate, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQryProductGroup(CThostFtdcProductGroupField* pProductGroup, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQryProductGroup(m_rust, pProductGroup, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQryMMInstrumentCommissionRate(CThostFtdcMMInstrumentCommissionRateField* pMMInstrumentCommissionRate, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQryMMInstrumentCommissionRate(m_rust, pMMInstrumentCommissionRate, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQryMMOptionInstrCommRate(CThostFtdcMMOptionInstrCommRateField* pMMOptionInstrCommRate, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQryMMOptionInstrCommRate(m_rust, pMMOptionInstrCommRate, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQryInstrumentOrderCommRate(CThostFtdcInstrumentOrderCommRateField* pInstrumentOrderCommRate, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQryInstrumentOrderCommRate(m_rust, pInstrumentOrderCommRate, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQrySecAgentTradingAccount(CThostFtdcTradingAccountField* pTradingAccount, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQrySecAgentTradingAccount(m_rust, pTradingAccount, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQrySecAgentCheckMode(CThostFtdcSecAgentCheckModeField* pSecAgentCheckMode, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQrySecAgentCheckMode(m_rust, pSecAgentCheckMode, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQrySecAgentTradeInfo(CThostFtdcSecAgentTradeInfoField* pSecAgentTradeInfo, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQrySecAgentTradeInfo(m_rust, pSecAgentTradeInfo, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQryOptionInstrTradeCost(CThostFtdcOptionInstrTradeCostField* pOptionInstrTradeCost, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQryOptionInstrTradeCost(m_rust, pOptionInstrTradeCost, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQryOptionInstrCommRate(CThostFtdcOptionInstrCommRateField* pOptionInstrCommRate, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQryOptionInstrCommRate(m_rust, pOptionInstrCommRate, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQryExecOrder(CThostFtdcExecOrderField* pExecOrder, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQryExecOrder(m_rust, pExecOrder, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQryForQuote(CThostFtdcForQuoteField* pForQuote, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQryForQuote(m_rust, pForQuote, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQryQuote(CThostFtdcQuoteField* pQuote, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQryQuote(m_rust, pQuote, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQryOptionSelfClose(CThostFtdcOptionSelfCloseField* pOptionSelfClose, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQryOptionSelfClose(m_rust, pOptionSelfClose, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQryInvestUnit(CThostFtdcInvestUnitField* pInvestUnit, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQryInvestUnit(m_rust, pInvestUnit, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQryCombInstrumentGuard(CThostFtdcCombInstrumentGuardField* pCombInstrumentGuard, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQryCombInstrumentGuard(m_rust, pCombInstrumentGuard, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQryCombAction(CThostFtdcCombActionField* pCombAction, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQryCombAction(m_rust, pCombAction, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQryTransferSerial(CThostFtdcTransferSerialField* pTransferSerial, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQryTransferSerial(m_rust, pTransferSerial, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQryAccountregister(CThostFtdcAccountregisterField* pAccountregister, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQryAccountregister(m_rust, pAccountregister, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspError(CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspError(m_rust, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRtnOrder(CThostFtdcOrderField* pOrder) { return Rust_CThostFtdcTraderSpi_Trait_OnRtnOrder(m_rust, pOrder); }
void Rust_CThostFtdcTraderSpi::OnRtnTrade(CThostFtdcTradeField* pTrade) { return Rust_CThostFtdcTraderSpi_Trait_OnRtnTrade(m_rust, pTrade); }
void Rust_CThostFtdcTraderSpi::OnErrRtnOrderInsert(CThostFtdcInputOrderField* pInputOrder, CThostFtdcRspInfoField* pRspInfo) { return Rust_CThostFtdcTraderSpi_Trait_OnErrRtnOrderInsert(m_rust, pInputOrder, pRspInfo); }
void Rust_CThostFtdcTraderSpi::OnErrRtnOrderAction(CThostFtdcOrderActionField* pOrderAction, CThostFtdcRspInfoField* pRspInfo) { return Rust_CThostFtdcTraderSpi_Trait_OnErrRtnOrderAction(m_rust, pOrderAction, pRspInfo); }
void Rust_CThostFtdcTraderSpi::OnRtnInstrumentStatus(CThostFtdcInstrumentStatusField* pInstrumentStatus) { return Rust_CThostFtdcTraderSpi_Trait_OnRtnInstrumentStatus(m_rust, pInstrumentStatus); }
void Rust_CThostFtdcTraderSpi::OnRtnBulletin(CThostFtdcBulletinField* pBulletin) { return Rust_CThostFtdcTraderSpi_Trait_OnRtnBulletin(m_rust, pBulletin); }
void Rust_CThostFtdcTraderSpi::OnRtnTradingNotice(CThostFtdcTradingNoticeInfoField* pTradingNoticeInfo) { return Rust_CThostFtdcTraderSpi_Trait_OnRtnTradingNotice(m_rust, pTradingNoticeInfo); }
void Rust_CThostFtdcTraderSpi::OnRtnErrorConditionalOrder(CThostFtdcErrorConditionalOrderField* pErrorConditionalOrder) { return Rust_CThostFtdcTraderSpi_Trait_OnRtnErrorConditionalOrder(m_rust, pErrorConditionalOrder); }
void Rust_CThostFtdcTraderSpi::OnRtnExecOrder(CThostFtdcExecOrderField* pExecOrder) { return Rust_CThostFtdcTraderSpi_Trait_OnRtnExecOrder(m_rust, pExecOrder); }
void Rust_CThostFtdcTraderSpi::OnErrRtnExecOrderInsert(CThostFtdcInputExecOrderField* pInputExecOrder, CThostFtdcRspInfoField* pRspInfo) { return Rust_CThostFtdcTraderSpi_Trait_OnErrRtnExecOrderInsert(m_rust, pInputExecOrder, pRspInfo); }
void Rust_CThostFtdcTraderSpi::OnErrRtnExecOrderAction(CThostFtdcExecOrderActionField* pExecOrderAction, CThostFtdcRspInfoField* pRspInfo) { return Rust_CThostFtdcTraderSpi_Trait_OnErrRtnExecOrderAction(m_rust, pExecOrderAction, pRspInfo); }
void Rust_CThostFtdcTraderSpi::OnErrRtnForQuoteInsert(CThostFtdcInputForQuoteField* pInputForQuote, CThostFtdcRspInfoField* pRspInfo) { return Rust_CThostFtdcTraderSpi_Trait_OnErrRtnForQuoteInsert(m_rust, pInputForQuote, pRspInfo); }
void Rust_CThostFtdcTraderSpi::OnRtnQuote(CThostFtdcQuoteField* pQuote) { return Rust_CThostFtdcTraderSpi_Trait_OnRtnQuote(m_rust, pQuote); }
void Rust_CThostFtdcTraderSpi::OnErrRtnQuoteInsert(CThostFtdcInputQuoteField* pInputQuote, CThostFtdcRspInfoField* pRspInfo) { return Rust_CThostFtdcTraderSpi_Trait_OnErrRtnQuoteInsert(m_rust, pInputQuote, pRspInfo); }
void Rust_CThostFtdcTraderSpi::OnErrRtnQuoteAction(CThostFtdcQuoteActionField* pQuoteAction, CThostFtdcRspInfoField* pRspInfo) { return Rust_CThostFtdcTraderSpi_Trait_OnErrRtnQuoteAction(m_rust, pQuoteAction, pRspInfo); }
void Rust_CThostFtdcTraderSpi::OnRtnForQuoteRsp(CThostFtdcForQuoteRspField* pForQuoteRsp) { return Rust_CThostFtdcTraderSpi_Trait_OnRtnForQuoteRsp(m_rust, pForQuoteRsp); }
void Rust_CThostFtdcTraderSpi::OnRtnCFMMCTradingAccountToken(CThostFtdcCFMMCTradingAccountTokenField* pCFMMCTradingAccountToken) { return Rust_CThostFtdcTraderSpi_Trait_OnRtnCFMMCTradingAccountToken(m_rust, pCFMMCTradingAccountToken); }
void Rust_CThostFtdcTraderSpi::OnErrRtnBatchOrderAction(CThostFtdcBatchOrderActionField* pBatchOrderAction, CThostFtdcRspInfoField* pRspInfo) { return Rust_CThostFtdcTraderSpi_Trait_OnErrRtnBatchOrderAction(m_rust, pBatchOrderAction, pRspInfo); }
void Rust_CThostFtdcTraderSpi::OnRtnOptionSelfClose(CThostFtdcOptionSelfCloseField* pOptionSelfClose) { return Rust_CThostFtdcTraderSpi_Trait_OnRtnOptionSelfClose(m_rust, pOptionSelfClose); }
void Rust_CThostFtdcTraderSpi::OnErrRtnOptionSelfCloseInsert(CThostFtdcInputOptionSelfCloseField* pInputOptionSelfClose, CThostFtdcRspInfoField* pRspInfo) { return Rust_CThostFtdcTraderSpi_Trait_OnErrRtnOptionSelfCloseInsert(m_rust, pInputOptionSelfClose, pRspInfo); }
void Rust_CThostFtdcTraderSpi::OnErrRtnOptionSelfCloseAction(CThostFtdcOptionSelfCloseActionField* pOptionSelfCloseAction, CThostFtdcRspInfoField* pRspInfo) { return Rust_CThostFtdcTraderSpi_Trait_OnErrRtnOptionSelfCloseAction(m_rust, pOptionSelfCloseAction, pRspInfo); }
void Rust_CThostFtdcTraderSpi::OnRtnCombAction(CThostFtdcCombActionField* pCombAction) { return Rust_CThostFtdcTraderSpi_Trait_OnRtnCombAction(m_rust, pCombAction); }
void Rust_CThostFtdcTraderSpi::OnErrRtnCombActionInsert(CThostFtdcInputCombActionField* pInputCombAction, CThostFtdcRspInfoField* pRspInfo) { return Rust_CThostFtdcTraderSpi_Trait_OnErrRtnCombActionInsert(m_rust, pInputCombAction, pRspInfo); }
void Rust_CThostFtdcTraderSpi::OnRspQryContractBank(CThostFtdcContractBankField* pContractBank, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQryContractBank(m_rust, pContractBank, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQryParkedOrder(CThostFtdcParkedOrderField* pParkedOrder, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQryParkedOrder(m_rust, pParkedOrder, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQryParkedOrderAction(CThostFtdcParkedOrderActionField* pParkedOrderAction, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQryParkedOrderAction(m_rust, pParkedOrderAction, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQryTradingNotice(CThostFtdcTradingNoticeField* pTradingNotice, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQryTradingNotice(m_rust, pTradingNotice, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQryBrokerTradingParams(CThostFtdcBrokerTradingParamsField* pBrokerTradingParams, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQryBrokerTradingParams(m_rust, pBrokerTradingParams, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQryBrokerTradingAlgos(CThostFtdcBrokerTradingAlgosField* pBrokerTradingAlgos, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQryBrokerTradingAlgos(m_rust, pBrokerTradingAlgos, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQueryCFMMCTradingAccountToken(CThostFtdcQueryCFMMCTradingAccountTokenField* pQueryCFMMCTradingAccountToken, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQueryCFMMCTradingAccountToken(m_rust, pQueryCFMMCTradingAccountToken, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRtnFromBankToFutureByBank(CThostFtdcRspTransferField* pRspTransfer) { return Rust_CThostFtdcTraderSpi_Trait_OnRtnFromBankToFutureByBank(m_rust, pRspTransfer); }
void Rust_CThostFtdcTraderSpi::OnRtnFromFutureToBankByBank(CThostFtdcRspTransferField* pRspTransfer) { return Rust_CThostFtdcTraderSpi_Trait_OnRtnFromFutureToBankByBank(m_rust, pRspTransfer); }
void Rust_CThostFtdcTraderSpi::OnRtnRepealFromBankToFutureByBank(CThostFtdcRspRepealField* pRspRepeal) { return Rust_CThostFtdcTraderSpi_Trait_OnRtnRepealFromBankToFutureByBank(m_rust, pRspRepeal); }
void Rust_CThostFtdcTraderSpi::OnRtnRepealFromFutureToBankByBank(CThostFtdcRspRepealField* pRspRepeal) { return Rust_CThostFtdcTraderSpi_Trait_OnRtnRepealFromFutureToBankByBank(m_rust, pRspRepeal); }
void Rust_CThostFtdcTraderSpi::OnRtnFromBankToFutureByFuture(CThostFtdcRspTransferField* pRspTransfer) { return Rust_CThostFtdcTraderSpi_Trait_OnRtnFromBankToFutureByFuture(m_rust, pRspTransfer); }
void Rust_CThostFtdcTraderSpi::OnRtnFromFutureToBankByFuture(CThostFtdcRspTransferField* pRspTransfer) { return Rust_CThostFtdcTraderSpi_Trait_OnRtnFromFutureToBankByFuture(m_rust, pRspTransfer); }
void Rust_CThostFtdcTraderSpi::OnRtnRepealFromBankToFutureByFutureManual(CThostFtdcRspRepealField* pRspRepeal) { return Rust_CThostFtdcTraderSpi_Trait_OnRtnRepealFromBankToFutureByFutureManual(m_rust, pRspRepeal); }
void Rust_CThostFtdcTraderSpi::OnRtnRepealFromFutureToBankByFutureManual(CThostFtdcRspRepealField* pRspRepeal) { return Rust_CThostFtdcTraderSpi_Trait_OnRtnRepealFromFutureToBankByFutureManual(m_rust, pRspRepeal); }
void Rust_CThostFtdcTraderSpi::OnRtnQueryBankBalanceByFuture(CThostFtdcNotifyQueryAccountField* pNotifyQueryAccount) { return Rust_CThostFtdcTraderSpi_Trait_OnRtnQueryBankBalanceByFuture(m_rust, pNotifyQueryAccount); }
void Rust_CThostFtdcTraderSpi::OnErrRtnBankToFutureByFuture(CThostFtdcReqTransferField* pReqTransfer, CThostFtdcRspInfoField* pRspInfo) { return Rust_CThostFtdcTraderSpi_Trait_OnErrRtnBankToFutureByFuture(m_rust, pReqTransfer, pRspInfo); }
void Rust_CThostFtdcTraderSpi::OnErrRtnFutureToBankByFuture(CThostFtdcReqTransferField* pReqTransfer, CThostFtdcRspInfoField* pRspInfo) { return Rust_CThostFtdcTraderSpi_Trait_OnErrRtnFutureToBankByFuture(m_rust, pReqTransfer, pRspInfo); }
void Rust_CThostFtdcTraderSpi::OnErrRtnRepealBankToFutureByFutureManual(CThostFtdcReqRepealField* pReqRepeal, CThostFtdcRspInfoField* pRspInfo) { return Rust_CThostFtdcTraderSpi_Trait_OnErrRtnRepealBankToFutureByFutureManual(m_rust, pReqRepeal, pRspInfo); }
void Rust_CThostFtdcTraderSpi::OnErrRtnRepealFutureToBankByFutureManual(CThostFtdcReqRepealField* pReqRepeal, CThostFtdcRspInfoField* pRspInfo) { return Rust_CThostFtdcTraderSpi_Trait_OnErrRtnRepealFutureToBankByFutureManual(m_rust, pReqRepeal, pRspInfo); }
void Rust_CThostFtdcTraderSpi::OnErrRtnQueryBankBalanceByFuture(CThostFtdcReqQueryAccountField* pReqQueryAccount, CThostFtdcRspInfoField* pRspInfo) { return Rust_CThostFtdcTraderSpi_Trait_OnErrRtnQueryBankBalanceByFuture(m_rust, pReqQueryAccount, pRspInfo); }
void Rust_CThostFtdcTraderSpi::OnRtnRepealFromBankToFutureByFuture(CThostFtdcRspRepealField* pRspRepeal) { return Rust_CThostFtdcTraderSpi_Trait_OnRtnRepealFromBankToFutureByFuture(m_rust, pRspRepeal); }
void Rust_CThostFtdcTraderSpi::OnRtnRepealFromFutureToBankByFuture(CThostFtdcRspRepealField* pRspRepeal) { return Rust_CThostFtdcTraderSpi_Trait_OnRtnRepealFromFutureToBankByFuture(m_rust, pRspRepeal); }
void Rust_CThostFtdcTraderSpi::OnRspFromBankToFutureByFuture(CThostFtdcReqTransferField* pReqTransfer, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspFromBankToFutureByFuture(m_rust, pReqTransfer, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspFromFutureToBankByFuture(CThostFtdcReqTransferField* pReqTransfer, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspFromFutureToBankByFuture(m_rust, pReqTransfer, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQueryBankAccountMoneyByFuture(CThostFtdcReqQueryAccountField* pReqQueryAccount, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQueryBankAccountMoneyByFuture(m_rust, pReqQueryAccount, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRtnOpenAccountByBank(CThostFtdcOpenAccountField* pOpenAccount) { return Rust_CThostFtdcTraderSpi_Trait_OnRtnOpenAccountByBank(m_rust, pOpenAccount); }
void Rust_CThostFtdcTraderSpi::OnRtnCancelAccountByBank(CThostFtdcCancelAccountField* pCancelAccount) { return Rust_CThostFtdcTraderSpi_Trait_OnRtnCancelAccountByBank(m_rust, pCancelAccount); }
void Rust_CThostFtdcTraderSpi::OnRtnChangeAccountByBank(CThostFtdcChangeAccountField* pChangeAccount) { return Rust_CThostFtdcTraderSpi_Trait_OnRtnChangeAccountByBank(m_rust, pChangeAccount); }
void Rust_CThostFtdcTraderSpi::OnRspQryClassifiedInstrument(CThostFtdcInstrumentField* pInstrument, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQryClassifiedInstrument(m_rust, pInstrument, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQryCombPromotionParam(CThostFtdcCombPromotionParamField* pCombPromotionParam, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQryCombPromotionParam(m_rust, pCombPromotionParam, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQryRiskSettleInvstPosition(CThostFtdcRiskSettleInvstPositionField* pRiskSettleInvstPosition, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQryRiskSettleInvstPosition(m_rust, pRiskSettleInvstPosition, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQryRiskSettleProductStatus(CThostFtdcRiskSettleProductStatusField* pRiskSettleProductStatus, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQryRiskSettleProductStatus(m_rust, pRiskSettleProductStatus, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQrySPBMFutureParameter(CThostFtdcSPBMFutureParameterField* pSPBMFutureParameter, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQrySPBMFutureParameter(m_rust, pSPBMFutureParameter, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQrySPBMOptionParameter(CThostFtdcSPBMOptionParameterField* pSPBMOptionParameter, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQrySPBMOptionParameter(m_rust, pSPBMOptionParameter, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQrySPBMIntraParameter(CThostFtdcSPBMIntraParameterField* pSPBMIntraParameter, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQrySPBMIntraParameter(m_rust, pSPBMIntraParameter, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQrySPBMInterParameter(CThostFtdcSPBMInterParameterField* pSPBMInterParameter, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQrySPBMInterParameter(m_rust, pSPBMInterParameter, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQrySPBMPortfDefinition(CThostFtdcSPBMPortfDefinitionField* pSPBMPortfDefinition, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQrySPBMPortfDefinition(m_rust, pSPBMPortfDefinition, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQrySPBMInvestorPortfDef(CThostFtdcSPBMInvestorPortfDefField* pSPBMInvestorPortfDef, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQrySPBMInvestorPortfDef(m_rust, pSPBMInvestorPortfDef, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQryInvestorPortfMarginRatio(CThostFtdcInvestorPortfMarginRatioField* pInvestorPortfMarginRatio, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQryInvestorPortfMarginRatio(m_rust, pInvestorPortfMarginRatio, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQryInvestorProdSPBMDetail(CThostFtdcInvestorProdSPBMDetailField* pInvestorProdSPBMDetail, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQryInvestorProdSPBMDetail(m_rust, pInvestorProdSPBMDetail, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQryInvestorCommoditySPMMMargin(CThostFtdcInvestorCommoditySPMMMarginField* pInvestorCommoditySPMMMargin, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQryInvestorCommoditySPMMMargin(m_rust, pInvestorCommoditySPMMMargin, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQryInvestorCommodityGroupSPMMMargin(CThostFtdcInvestorCommodityGroupSPMMMarginField* pInvestorCommodityGroupSPMMMargin, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQryInvestorCommodityGroupSPMMMargin(m_rust, pInvestorCommodityGroupSPMMMargin, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQrySPMMInstParam(CThostFtdcSPMMInstParamField* pSPMMInstParam, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQrySPMMInstParam(m_rust, pSPMMInstParam, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQrySPMMProductParam(CThostFtdcSPMMProductParamField* pSPMMProductParam, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQrySPMMProductParam(m_rust, pSPMMProductParam, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQrySPBMAddOnInterParameter(CThostFtdcSPBMAddOnInterParameterField* pSPBMAddOnInterParameter, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQrySPBMAddOnInterParameter(m_rust, pSPBMAddOnInterParameter, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQryRCAMSCombProductInfo(CThostFtdcRCAMSCombProductInfoField* pRCAMSCombProductInfo, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQryRCAMSCombProductInfo(m_rust, pRCAMSCombProductInfo, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQryRCAMSInstrParameter(CThostFtdcRCAMSInstrParameterField* pRCAMSInstrParameter, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQryRCAMSInstrParameter(m_rust, pRCAMSInstrParameter, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQryRCAMSIntraParameter(CThostFtdcRCAMSIntraParameterField* pRCAMSIntraParameter, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQryRCAMSIntraParameter(m_rust, pRCAMSIntraParameter, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQryRCAMSInterParameter(CThostFtdcRCAMSInterParameterField* pRCAMSInterParameter, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQryRCAMSInterParameter(m_rust, pRCAMSInterParameter, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQryRCAMSShortOptAdjustParam(CThostFtdcRCAMSShortOptAdjustParamField* pRCAMSShortOptAdjustParam, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQryRCAMSShortOptAdjustParam(m_rust, pRCAMSShortOptAdjustParam, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQryRCAMSInvestorCombPosition(CThostFtdcRCAMSInvestorCombPositionField* pRCAMSInvestorCombPosition, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQryRCAMSInvestorCombPosition(m_rust, pRCAMSInvestorCombPosition, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQryInvestorProdRCAMSMargin(CThostFtdcInvestorProdRCAMSMarginField* pInvestorProdRCAMSMargin, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQryInvestorProdRCAMSMargin(m_rust, pInvestorProdRCAMSMargin, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQryRULEInstrParameter(CThostFtdcRULEInstrParameterField* pRULEInstrParameter, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQryRULEInstrParameter(m_rust, pRULEInstrParameter, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQryRULEIntraParameter(CThostFtdcRULEIntraParameterField* pRULEIntraParameter, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQryRULEIntraParameter(m_rust, pRULEIntraParameter, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQryRULEInterParameter(CThostFtdcRULEInterParameterField* pRULEInterParameter, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQryRULEInterParameter(m_rust, pRULEInterParameter, pRspInfo, nRequestID, bIsLast); }
void Rust_CThostFtdcTraderSpi::OnRspQryInvestorProdRULEMargin(CThostFtdcInvestorProdRULEMarginField* pInvestorProdRULEMargin, CThostFtdcRspInfoField* pRspInfo, int nRequestID, bool bIsLast) { return Rust_CThostFtdcTraderSpi_Trait_OnRspQryInvestorProdRULEMargin(m_rust, pInvestorProdRULEMargin, pRspInfo, nRequestID, bIsLast); }
Rust_CThostFtdcTraderSpi::Rust_CThostFtdcTraderSpi(void *rust) : m_rust(rust) {}
Rust_CThostFtdcTraderSpi::~Rust_CThostFtdcTraderSpi() { Rust_CThostFtdcTraderSpi_Trait_Drop(m_rust); }

